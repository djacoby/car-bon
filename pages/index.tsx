import { useEffect, useState } from 'react'
import Head from 'next/head'

import { Title, Container, Center, Text } from '@mantine/core'

import DropdownSelect from '../components/DropdownSelect'
import { ApiResponse, FuelEconomyApiValue } from '../shared/interfaces'

export default function Home() {
  const [years, updateYears] = useState([] as FuelEconomyApiValue[])
  const [selectedYear, updateSelectedYear] = useState<string | null>(null)

  const [makes, updateMakes] = useState([] as FuelEconomyApiValue[])
  const [selectedMake, updateSelectedMake] = useState<string | null>(null)

  const [models, updateModels] = useState([] as FuelEconomyApiValue[])
  const [selectedModel, updateSelectedModel] = useState<string | null>(null)

  const [trims, updateTrims] = useState([] as FuelEconomyApiValue[])
  const [selectedTrim, updateSelectedTrim] = useState<string | null>(null)
  
  useEffect(() => {
    getYears()

    if (selectedYear) {
      getMakes()
    }

    if (selectedMake) {
      getModels()
    }

    if (selectedModel) {
      getTrims()
    }
  },[selectedYear, selectedMake, selectedModel])

  async function getYears() {
    const res: ApiResponse<FuelEconomyApiValue[]> = await (await fetch('http://localhost:3000/api/vehicle/years')).json()

    // if (years.length) {
    //   updateMakes([])
    //   updateModels([])
    //   updateTrims([])
    // }
  
    updateYears(res.result as FuelEconomyApiValue[])
  }

  async function getMakes() {
    const res: ApiResponse<FuelEconomyApiValue[]> = await (await fetch(`http://localhost:3000/api/vehicle/makes?year=${selectedYear}`)).json()
  
    updateMakes(res.result as FuelEconomyApiValue[])
  }

  async function getModels() {
    const res: ApiResponse<FuelEconomyApiValue[]> = await (await fetch(`http://localhost:3000/api/vehicle/models?year=${selectedYear}&make=${selectedMake}`)).json()
  
    updateModels(res.result as FuelEconomyApiValue[])
  }

  async function getTrims() {
    const res: ApiResponse<FuelEconomyApiValue[]> = await (await fetch(`http://localhost:3000/api/vehicle/trims?year=${selectedYear}&make=${selectedMake}&model=${selectedModel}`)).json()
  
    updateTrims(res.result as FuelEconomyApiValue[])
  }

  return (
    <div>
      <Head>
        <title>CarBon - Vehicle Carbon Calculator</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main>
        <Container mt='md'>
          <Center>
            <Title order={1}>Welcome to CarBon!</Title>
          </Center>
        </Container>

        <Container mt='md' size='xs' px='xs'>
          <Center>
            <Text>
              Enter your vehicle information (year, make, model, trim) the distance of your commute (one way), and the number of days you make the commute.
            </Text>
          </Center>
        </Container>

        <Container mt='md' size='xs'>
          <DropdownSelect
            label='Select Vehicle Year'
            placeholder='Year'
            data={years}
            value={selectedYear}
            updateStateFn={updateSelectedYear}
          />

          <DropdownSelect
            disabled={!selectedYear}
            label='Select Vehicle Make'
            placeholder='Make'
            data={makes}
            value={selectedMake}
            updateStateFn={updateSelectedMake}
          />

          <DropdownSelect
            disabled={!selectedMake}
            label='Select Vehicle Model'
            placeholder='Model'
            data={models}
            value={selectedModel}
            updateStateFn={updateSelectedModel}
          />

          {
            !!trims.length &&
            <DropdownSelect
              disabled={!selectedModel}
              label='Select Vehicle Trim'
              placeholder='Trim'
              data={trims}
              value={selectedTrim}
              updateStateFn={updateSelectedTrim}
            />
          }


        </Container>

      </main>

      {/* <footer>
        Footer
      </footer> */}
    </div>
  )
}
